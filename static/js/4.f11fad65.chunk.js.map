{"version":3,"sources":["../static/js/4.f11fad65.chunk.js","../node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js","../node_modules/monaco-editor/esm/vs/language/typescript/workerManager.js","../node_modules/monaco-editor/esm/vs/language/typescript/languageFeatures.js"],"names":["webpackJsonp","731","module","__webpack_exports__","__webpack_require__","setupTypeScript","defaults","typeScriptWorker","setupMode","setupJavaScript","javaScriptWorker","getJavaScriptWorker","monaco","Promise","resolve","reject","getTypeScriptWorker","modeId","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","first","more","_i","arguments","length","getLanguageServiceWorker","apply","concat","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","Object","defineProperty","value","747","d","WorkerManager","_this","this","_modeId","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","maxIdleTime","getWorkerMaxIdleTime","timePassedSinceLastUsed","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","compilerOptions","getCompilerOptions","extraLibs","getExtraLibs","p","getProxy","getEagerModelSync","then","withSyncedResources","getModels","filter","model","getModeId","map","uri","resources","_","748","flattenDiagnosticMessageText","messageText","newLine","diagnosticChain","result","indent","i","next","displayPartsToString","displayParts","displayPart","text","join","DiagnostcsAdapter","SuggestAdapter","SignatureHelpAdapter","QuickInfoAdapter","OccurrencesAdapter","DefinitionAdapter","ReferenceAdapter","OutlineAdapter","FormatAdapter","FormatOnTypeAdapter","IndentStyle","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","Uri","Adapter","_positionToOffset","position","getModel","getOffsetAt","_offsetToPosition","offset","getPositionAt","_textSpanToRange","span","p1","start","p2","startLineNumber","lineNumber","startColumn","column","endLineNumber","endColumn","_super","_selector","call","_disposables","_listener","onModelAdd","handle","changeSubscription","onDidChangeContent","clearTimeout","setTimeout","_doValidate","toString","onModelRemoved","setModelMarkers","key","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","_a","forEach","resource","promises","getDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","getSyntacticDiagnostics","getSemanticDiagnostics","diagnostics","markers","reduce","c","_convertDiagnostics","undefined","err","console","error","diag","_b","severity","MarkerSeverity","Error","message","get","enumerable","configurable","provideCompletionItems","_context","token","getWordUntilPosition","getCompletionsAtPosition","info","suggestions","entries","entry","name","insertText","sortText","kind","convertKind","resolveCompletionItem","_model","_position","item","myItem","getCompletionEntryDetails","details","detail","documentation","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","Module","class","Class","interface","Interface","warning","File","Property","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelpItems","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","provideHover","getQuickInfoAtPosition","tags","tag","match","contents","range","textSpan","provideDocumentHighlights","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","provideDefinition","getDefinitionAtPosition","entries_1","parse","fileName","provideReferences","context","getReferencesAtPosition","entries_2","provideDocumentSymbols","getNavigationBarItems","convert","bucket","containerLabel","outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","unknown","script","type","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","Smart","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","provideDocumentRangeFormattingEdits","getFormattingEditsForRange","edits","edit","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke"],"mappings":"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","file":"static/js/4.f11fad65.chunk.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 731:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupTypeScript\"] = setupTypeScript;\n/* harmony export (immutable) */ __webpack_exports__[\"setupJavaScript\"] = setupJavaScript;\n/* harmony export (immutable) */ __webpack_exports__[\"getJavaScriptWorker\"] = getJavaScriptWorker;\n/* harmony export (immutable) */ __webpack_exports__[\"getTypeScriptWorker\"] = getTypeScriptWorker;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(747);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(748);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\nvar javaScriptWorker;\r\nvar typeScriptWorker;\r\nfunction setupTypeScript(defaults) {\r\n    typeScriptWorker = setupMode(defaults, 'typescript');\r\n}\r\nfunction setupJavaScript(defaults) {\r\n    javaScriptWorker = setupMode(defaults, 'javascript');\r\n}\r\nfunction getJavaScriptWorker() {\r\n    return new monaco.Promise(function (resolve, reject) {\r\n        if (!javaScriptWorker) {\r\n            return reject(\"JavaScript not registered!\");\r\n        }\r\n        resolve(javaScriptWorker);\r\n    });\r\n}\r\nfunction getTypeScriptWorker() {\r\n    return new monaco.Promise(function (resolve, reject) {\r\n        if (!typeScriptWorker) {\r\n            return reject(\"TypeScript not registered!\");\r\n        }\r\n        resolve(typeScriptWorker);\r\n    });\r\n}\r\nfunction setupMode(defaults, modeId) {\r\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](modeId, defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    monaco.languages.registerCompletionItemProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"j\" /* SuggestAdapter */](worker));\r\n    monaco.languages.registerSignatureHelpProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"i\" /* SignatureHelpAdapter */](worker));\r\n    monaco.languages.registerHoverProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"g\" /* QuickInfoAdapter */](worker));\r\n    monaco.languages.registerDocumentHighlightProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* OccurrencesAdapter */](worker));\r\n    monaco.languages.registerDefinitionProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* DefinitionAdapter */](worker));\r\n    monaco.languages.registerReferenceProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"h\" /* ReferenceAdapter */](worker));\r\n    monaco.languages.registerDocumentSymbolProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* OutlineAdapter */](worker));\r\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* FormatAdapter */](worker));\r\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* FormatOnTypeAdapter */](worker));\r\n    new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnostcsAdapter */](defaults, modeId, worker);\r\n    return worker;\r\n}\r\n\n\n/***/ }),\n\n/***/ 747:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(modeId, defaults) {\r\n        var _this = this;\r\n        this._modeId = modeId;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var maxIdleTime = this._defaults.getWorkerMaxIdleTime();\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (maxIdleTime > 0 && timePassedSinceLastUsed > maxIdleTime) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        var _this = this;\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\r\n                moduleId: 'vs/language/typescript/tsWorker',\r\n                label: this._modeId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    compilerOptions: this._defaults.getCompilerOptions(),\r\n                    extraLibs: this._defaults.getExtraLibs()\r\n                }\r\n            });\r\n            var p = this._worker.getProxy();\r\n            if (this._defaults.getEagerModelSync()) {\r\n                p = p.then(function (worker) {\r\n                    return _this._worker.withSyncedResources(monaco.editor.getModels()\r\n                        .filter(function (model) { return model.getModeId() === _this._modeId; })\r\n                        .map(function (model) { return model.uri; }));\r\n                });\r\n            }\r\n            this._client = p;\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ 748:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Adapter */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnostcsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return SuggestAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return SignatureHelpAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return QuickInfoAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return OccurrencesAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DefinitionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ReferenceAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return OutlineAdapter; });\n/* unused harmony export Kind */\n/* unused harmony export FormatHelper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return FormatAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return FormatOnTypeAdapter; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar Uri = monaco.Uri;\r\nvar Promise = monaco.Promise;\r\n//#region utils copied from typescript to prevent loading the entire typescriptServices ---\r\nvar IndentStyle;\r\n(function (IndentStyle) {\r\n    IndentStyle[IndentStyle[\"None\"] = 0] = \"None\";\r\n    IndentStyle[IndentStyle[\"Block\"] = 1] = \"Block\";\r\n    IndentStyle[IndentStyle[\"Smart\"] = 2] = \"Smart\";\r\n})(IndentStyle || (IndentStyle = {}));\r\nfunction flattenDiagnosticMessageText(messageText, newLine) {\r\n    if (typeof messageText === \"string\") {\r\n        return messageText;\r\n    }\r\n    else {\r\n        var diagnosticChain = messageText;\r\n        var result = \"\";\r\n        var indent = 0;\r\n        while (diagnosticChain) {\r\n            if (indent) {\r\n                result += newLine;\r\n                for (var i = 0; i < indent; i++) {\r\n                    result += \"  \";\r\n                }\r\n            }\r\n            result += diagnosticChain.messageText;\r\n            indent++;\r\n            diagnosticChain = diagnosticChain.next;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nfunction displayPartsToString(displayParts) {\r\n    if (displayParts) {\r\n        return displayParts.map(function (displayPart) { return displayPart.text; }).join(\"\");\r\n    }\r\n    return \"\";\r\n}\r\n//#endregion\r\nvar Adapter = /** @class */ (function () {\r\n    function Adapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Adapter.prototype._positionToOffset = function (uri, position) {\r\n        var model = monaco.editor.getModel(uri);\r\n        return model.getOffsetAt(position);\r\n    };\r\n    Adapter.prototype._offsetToPosition = function (uri, offset) {\r\n        var model = monaco.editor.getModel(uri);\r\n        return model.getPositionAt(offset);\r\n    };\r\n    Adapter.prototype._textSpanToRange = function (uri, span) {\r\n        var p1 = this._offsetToPosition(uri, span.start);\r\n        var p2 = this._offsetToPosition(uri, span.start + span.length);\r\n        var startLineNumber = p1.lineNumber, startColumn = p1.column;\r\n        var endLineNumber = p2.lineNumber, endColumn = p2.column;\r\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\r\n    };\r\n    return Adapter;\r\n}());\r\n\r\n// --- diagnostics --- ---\r\nvar DiagnostcsAdapter = /** @class */ (function (_super) {\r\n    __extends(DiagnostcsAdapter, _super);\r\n    function DiagnostcsAdapter(_defaults, _selector, worker) {\r\n        var _this = _super.call(this, worker) || this;\r\n        _this._defaults = _defaults;\r\n        _this._selector = _selector;\r\n        _this._disposables = [];\r\n        _this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            if (model.getModeId() !== _selector) {\r\n                return;\r\n            }\r\n            var handle;\r\n            var changeSubscription = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri); }, 500);\r\n            });\r\n            _this._listener[model.uri.toString()] = {\r\n                dispose: function () {\r\n                    changeSubscription.dispose();\r\n                    clearTimeout(handle);\r\n                }\r\n            };\r\n            _this._doValidate(model.uri);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._selector, []);\r\n            var key = model.uri.toString();\r\n            if (_this._listener[key]) {\r\n                _this._listener[key].dispose();\r\n                delete _this._listener[key];\r\n            }\r\n        };\r\n        _this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        _this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        _this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        _this._disposables.push({\r\n            dispose: function () {\r\n                for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\r\n                    var model = _a[_i];\r\n                    onModelRemoved(model);\r\n                }\r\n            }\r\n        });\r\n        _this._disposables.push(_this._defaults.onDidChange(function () {\r\n            // redo diagnostics when options change\r\n            for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\r\n                var model = _a[_i];\r\n                onModelRemoved(model);\r\n                onModelAdd(model);\r\n            }\r\n        }));\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n        return _this;\r\n    }\r\n    DiagnostcsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnostcsAdapter.prototype._doValidate = function (resource) {\r\n        var _this = this;\r\n        this._worker(resource).then(function (worker) {\r\n            if (!monaco.editor.getModel(resource)) {\r\n                // model was disposed in the meantime\r\n                return null;\r\n            }\r\n            var promises = [];\r\n            var _a = _this._defaults.getDiagnosticsOptions(), noSyntaxValidation = _a.noSyntaxValidation, noSemanticValidation = _a.noSemanticValidation;\r\n            if (!noSyntaxValidation) {\r\n                promises.push(worker.getSyntacticDiagnostics(resource.toString()));\r\n            }\r\n            if (!noSemanticValidation) {\r\n                promises.push(worker.getSemanticDiagnostics(resource.toString()));\r\n            }\r\n            return Promise.join(promises);\r\n        }).then(function (diagnostics) {\r\n            if (!diagnostics || !monaco.editor.getModel(resource)) {\r\n                // model was disposed in the meantime\r\n                return null;\r\n            }\r\n            var markers = diagnostics\r\n                .reduce(function (p, c) { return c.concat(p); }, [])\r\n                .map(function (d) { return _this._convertDiagnostics(resource, d); });\r\n            monaco.editor.setModelMarkers(monaco.editor.getModel(resource), _this._selector, markers);\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    DiagnostcsAdapter.prototype._convertDiagnostics = function (resource, diag) {\r\n        var _a = this._offsetToPosition(resource, diag.start), startLineNumber = _a.lineNumber, startColumn = _a.column;\r\n        var _b = this._offsetToPosition(resource, diag.start + diag.length), endLineNumber = _b.lineNumber, endColumn = _b.column;\r\n        return {\r\n            severity: monaco.MarkerSeverity.Error,\r\n            startLineNumber: startLineNumber,\r\n            startColumn: startColumn,\r\n            endLineNumber: endLineNumber,\r\n            endColumn: endColumn,\r\n            message: flattenDiagnosticMessageText(diag.messageText, '\\n')\r\n        };\r\n    };\r\n    return DiagnostcsAdapter;\r\n}(Adapter));\r\n\r\nvar SuggestAdapter = /** @class */ (function (_super) {\r\n    __extends(SuggestAdapter, _super);\r\n    function SuggestAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SuggestAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return ['.'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestAdapter.prototype.provideCompletionItems = function (model, position, _context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        var offset = this._positionToOffset(resource, position);\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getCompletionsAtPosition(resource.toString(), offset);\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var suggestions = info.entries.map(function (entry) {\r\n                return {\r\n                    uri: resource,\r\n                    position: position,\r\n                    label: entry.name,\r\n                    insertText: entry.name,\r\n                    sortText: entry.sortText,\r\n                    kind: SuggestAdapter.convertKind(entry.kind)\r\n                };\r\n            });\r\n            return {\r\n                suggestions: suggestions\r\n            };\r\n        });\r\n    };\r\n    SuggestAdapter.prototype.resolveCompletionItem = function (_model, _position, item, token) {\r\n        var _this = this;\r\n        var myItem = item;\r\n        var resource = myItem.uri;\r\n        var position = myItem.position;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getCompletionEntryDetails(resource.toString(), _this._positionToOffset(resource, position), myItem.label);\r\n        }).then(function (details) {\r\n            if (!details) {\r\n                return myItem;\r\n            }\r\n            return {\r\n                uri: resource,\r\n                position: position,\r\n                label: details.name,\r\n                kind: SuggestAdapter.convertKind(details.kind),\r\n                detail: displayPartsToString(details.displayParts),\r\n                documentation: {\r\n                    value: displayPartsToString(details.documentation)\r\n                }\r\n            };\r\n        });\r\n    };\r\n    SuggestAdapter.convertKind = function (kind) {\r\n        switch (kind) {\r\n            case Kind.primitiveType:\r\n            case Kind.keyword:\r\n                return monaco.languages.CompletionItemKind.Keyword;\r\n            case Kind.variable:\r\n            case Kind.localVariable:\r\n                return monaco.languages.CompletionItemKind.Variable;\r\n            case Kind.memberVariable:\r\n            case Kind.memberGetAccessor:\r\n            case Kind.memberSetAccessor:\r\n                return monaco.languages.CompletionItemKind.Field;\r\n            case Kind.function:\r\n            case Kind.memberFunction:\r\n            case Kind.constructSignature:\r\n            case Kind.callSignature:\r\n            case Kind.indexSignature:\r\n                return monaco.languages.CompletionItemKind.Function;\r\n            case Kind.enum:\r\n                return monaco.languages.CompletionItemKind.Enum;\r\n            case Kind.module:\r\n                return monaco.languages.CompletionItemKind.Module;\r\n            case Kind.class:\r\n                return monaco.languages.CompletionItemKind.Class;\r\n            case Kind.interface:\r\n                return monaco.languages.CompletionItemKind.Interface;\r\n            case Kind.warning:\r\n                return monaco.languages.CompletionItemKind.File;\r\n        }\r\n        return monaco.languages.CompletionItemKind.Property;\r\n    };\r\n    return SuggestAdapter;\r\n}(Adapter));\r\n\r\nvar SignatureHelpAdapter = /** @class */ (function (_super) {\r\n    __extends(SignatureHelpAdapter, _super);\r\n    function SignatureHelpAdapter() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.signatureHelpTriggerCharacters = ['(', ','];\r\n        return _this;\r\n    }\r\n    SignatureHelpAdapter.prototype.provideSignatureHelp = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getSignatureHelpItems(resource.toString(), _this._positionToOffset(resource, position)); }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var ret = {\r\n                activeSignature: info.selectedItemIndex,\r\n                activeParameter: info.argumentIndex,\r\n                signatures: []\r\n            };\r\n            info.items.forEach(function (item) {\r\n                var signature = {\r\n                    label: '',\r\n                    documentation: null,\r\n                    parameters: []\r\n                };\r\n                signature.label += displayPartsToString(item.prefixDisplayParts);\r\n                item.parameters.forEach(function (p, i, a) {\r\n                    var label = displayPartsToString(p.displayParts);\r\n                    var parameter = {\r\n                        label: label,\r\n                        documentation: displayPartsToString(p.documentation)\r\n                    };\r\n                    signature.label += label;\r\n                    signature.parameters.push(parameter);\r\n                    if (i < a.length - 1) {\r\n                        signature.label += displayPartsToString(item.separatorDisplayParts);\r\n                    }\r\n                });\r\n                signature.label += displayPartsToString(item.suffixDisplayParts);\r\n                ret.signatures.push(signature);\r\n            });\r\n            return ret;\r\n        });\r\n    };\r\n    return SignatureHelpAdapter;\r\n}(Adapter));\r\n\r\n// --- hover ------\r\nvar QuickInfoAdapter = /** @class */ (function (_super) {\r\n    __extends(QuickInfoAdapter, _super);\r\n    function QuickInfoAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QuickInfoAdapter.prototype.provideHover = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getQuickInfoAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var documentation = displayPartsToString(info.documentation);\r\n            var tags = info.tags ? info.tags.map(function (tag) {\r\n                var label = \"*@\" + tag.name + \"*\";\r\n                if (!tag.text) {\r\n                    return label;\r\n                }\r\n                return label + (tag.text.match(/\\r\\n|\\n/g) ? ' \\n' + tag.text : \" - \" + tag.text);\r\n            })\r\n                .join('  \\n\\n') : '';\r\n            var contents = displayPartsToString(info.displayParts);\r\n            return {\r\n                range: _this._textSpanToRange(resource, info.textSpan),\r\n                contents: [{\r\n                        value: '```js\\n' + contents + '\\n```\\n'\r\n                    }, {\r\n                        value: documentation + (tags ? '\\n\\n' + tags : '')\r\n                    }]\r\n            };\r\n        });\r\n    };\r\n    return QuickInfoAdapter;\r\n}(Adapter));\r\n\r\n// --- occurrences ------\r\nvar OccurrencesAdapter = /** @class */ (function (_super) {\r\n    __extends(OccurrencesAdapter, _super);\r\n    function OccurrencesAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OccurrencesAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getOccurrencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: _this._textSpanToRange(resource, entry.textSpan),\r\n                    kind: entry.isWriteAccess ? monaco.languages.DocumentHighlightKind.Write : monaco.languages.DocumentHighlightKind.Text\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return OccurrencesAdapter;\r\n}(Adapter));\r\n\r\n// --- definition ------\r\nvar DefinitionAdapter = /** @class */ (function (_super) {\r\n    __extends(DefinitionAdapter, _super);\r\n    function DefinitionAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getDefinitionAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            var result = [];\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var entry = entries_1[_i];\r\n                var uri = Uri.parse(entry.fileName);\r\n                if (monaco.editor.getModel(uri)) {\r\n                    result.push({\r\n                        uri: uri,\r\n                        range: _this._textSpanToRange(uri, entry.textSpan)\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}(Adapter));\r\n\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function (_super) {\r\n    __extends(ReferenceAdapter, _super);\r\n    function ReferenceAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getReferencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            var result = [];\r\n            for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\r\n                var entry = entries_2[_i];\r\n                var uri = Uri.parse(entry.fileName);\r\n                if (monaco.editor.getModel(uri)) {\r\n                    result.push({\r\n                        uri: uri,\r\n                        range: _this._textSpanToRange(uri, entry.textSpan)\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}(Adapter));\r\n\r\n// --- outline ------\r\nvar OutlineAdapter = /** @class */ (function (_super) {\r\n    __extends(OutlineAdapter, _super);\r\n    function OutlineAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OutlineAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getNavigationBarItems(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            var convert = function (bucket, item, containerLabel) {\r\n                var result = {\r\n                    name: item.text,\r\n                    detail: '',\r\n                    kind: (outlineTypeTable[item.kind] || monaco.languages.SymbolKind.Variable),\r\n                    range: _this._textSpanToRange(resource, item.spans[0]),\r\n                    selectionRange: _this._textSpanToRange(resource, item.spans[0]),\r\n                    containerName: containerLabel\r\n                };\r\n                if (item.childItems && item.childItems.length > 0) {\r\n                    for (var _i = 0, _a = item.childItems; _i < _a.length; _i++) {\r\n                        var child = _a[_i];\r\n                        convert(bucket, child, result.name);\r\n                    }\r\n                }\r\n                bucket.push(result);\r\n            };\r\n            var result = [];\r\n            items.forEach(function (item) { return convert(result, item); });\r\n            return result;\r\n        });\r\n    };\r\n    return OutlineAdapter;\r\n}(Adapter));\r\n\r\nvar Kind = /** @class */ (function () {\r\n    function Kind() {\r\n    }\r\n    Kind.unknown = '';\r\n    Kind.keyword = 'keyword';\r\n    Kind.script = 'script';\r\n    Kind.module = 'module';\r\n    Kind.class = 'class';\r\n    Kind.interface = 'interface';\r\n    Kind.type = 'type';\r\n    Kind.enum = 'enum';\r\n    Kind.variable = 'var';\r\n    Kind.localVariable = 'local var';\r\n    Kind.function = 'function';\r\n    Kind.localFunction = 'local function';\r\n    Kind.memberFunction = 'method';\r\n    Kind.memberGetAccessor = 'getter';\r\n    Kind.memberSetAccessor = 'setter';\r\n    Kind.memberVariable = 'property';\r\n    Kind.constructorImplementation = 'constructor';\r\n    Kind.callSignature = 'call';\r\n    Kind.indexSignature = 'index';\r\n    Kind.constructSignature = 'construct';\r\n    Kind.parameter = 'parameter';\r\n    Kind.typeParameter = 'type parameter';\r\n    Kind.primitiveType = 'primitive type';\r\n    Kind.label = 'label';\r\n    Kind.alias = 'alias';\r\n    Kind.const = 'const';\r\n    Kind.let = 'let';\r\n    Kind.warning = 'warning';\r\n    return Kind;\r\n}());\r\n\r\nvar outlineTypeTable = Object.create(null);\r\noutlineTypeTable[Kind.module] = monaco.languages.SymbolKind.Module;\r\noutlineTypeTable[Kind.class] = monaco.languages.SymbolKind.Class;\r\noutlineTypeTable[Kind.enum] = monaco.languages.SymbolKind.Enum;\r\noutlineTypeTable[Kind.interface] = monaco.languages.SymbolKind.Interface;\r\noutlineTypeTable[Kind.memberFunction] = monaco.languages.SymbolKind.Method;\r\noutlineTypeTable[Kind.memberVariable] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.memberGetAccessor] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.memberSetAccessor] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.const] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.localVariable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.function] = monaco.languages.SymbolKind.Function;\r\noutlineTypeTable[Kind.localFunction] = monaco.languages.SymbolKind.Function;\r\n// --- formatting ----\r\nvar FormatHelper = /** @class */ (function (_super) {\r\n    __extends(FormatHelper, _super);\r\n    function FormatHelper() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormatHelper._convertOptions = function (options) {\r\n        return {\r\n            ConvertTabsToSpaces: options.insertSpaces,\r\n            TabSize: options.tabSize,\r\n            IndentSize: options.tabSize,\r\n            IndentStyle: IndentStyle.Smart,\r\n            NewLineCharacter: '\\n',\r\n            InsertSpaceAfterCommaDelimiter: true,\r\n            InsertSpaceAfterSemicolonInForStatements: true,\r\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\r\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\r\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\r\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\r\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\r\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\r\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\r\n            PlaceOpenBraceOnNewLineForFunctions: false\r\n        };\r\n    };\r\n    FormatHelper.prototype._convertTextChanges = function (uri, change) {\r\n        return {\r\n            text: change.newText,\r\n            range: this._textSpanToRange(uri, change.span)\r\n        };\r\n    };\r\n    return FormatHelper;\r\n}(Adapter));\r\n\r\nvar FormatAdapter = /** @class */ (function (_super) {\r\n    __extends(FormatAdapter, _super);\r\n    function FormatAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormatAdapter.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getFormattingEditsForRange(resource.toString(), _this._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }), _this._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }), FormatHelper._convertOptions(options));\r\n        }).then(function (edits) {\r\n            if (edits) {\r\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\r\n            }\r\n        });\r\n    };\r\n    return FormatAdapter;\r\n}(FormatHelper));\r\n\r\nvar FormatOnTypeAdapter = /** @class */ (function (_super) {\r\n    __extends(FormatOnTypeAdapter, _super);\r\n    function FormatOnTypeAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(FormatOnTypeAdapter.prototype, \"autoFormatTriggerCharacters\", {\r\n        get: function () {\r\n            return [';', '}', '\\n'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FormatOnTypeAdapter.prototype.provideOnTypeFormattingEdits = function (model, position, ch, options, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getFormattingEditsAfterKeystroke(resource.toString(), _this._positionToOffset(resource, position), ch, FormatHelper._convertOptions(options));\r\n        }).then(function (edits) {\r\n            if (edits) {\r\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\r\n            }\r\n        });\r\n    };\r\n    return FormatOnTypeAdapter;\r\n}(FormatHelper));\r\n\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/4.f11fad65.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nvar javaScriptWorker;\r\nvar typeScriptWorker;\r\nexport function setupTypeScript(defaults) {\r\n    typeScriptWorker = setupMode(defaults, 'typescript');\r\n}\r\nexport function setupJavaScript(defaults) {\r\n    javaScriptWorker = setupMode(defaults, 'javascript');\r\n}\r\nexport function getJavaScriptWorker() {\r\n    return new monaco.Promise(function (resolve, reject) {\r\n        if (!javaScriptWorker) {\r\n            return reject(\"JavaScript not registered!\");\r\n        }\r\n        resolve(javaScriptWorker);\r\n    });\r\n}\r\nexport function getTypeScriptWorker() {\r\n    return new monaco.Promise(function (resolve, reject) {\r\n        if (!typeScriptWorker) {\r\n            return reject(\"TypeScript not registered!\");\r\n        }\r\n        resolve(typeScriptWorker);\r\n    });\r\n}\r\nfunction setupMode(defaults, modeId) {\r\n    var client = new WorkerManager(modeId, defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\r\n    monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\r\n    monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\r\n    monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\r\n    monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\r\n    monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\r\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\r\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\r\n    new languageFeatures.DiagnostcsAdapter(defaults, modeId, worker);\r\n    return worker;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js\n// module id = 731\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(modeId, defaults) {\r\n        var _this = this;\r\n        this._modeId = modeId;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var maxIdleTime = this._defaults.getWorkerMaxIdleTime();\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (maxIdleTime > 0 && timePassedSinceLastUsed > maxIdleTime) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        var _this = this;\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\r\n                moduleId: 'vs/language/typescript/tsWorker',\r\n                label: this._modeId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    compilerOptions: this._defaults.getCompilerOptions(),\r\n                    extraLibs: this._defaults.getExtraLibs()\r\n                }\r\n            });\r\n            var p = this._worker.getProxy();\r\n            if (this._defaults.getEagerModelSync()) {\r\n                p = p.then(function (worker) {\r\n                    return _this._worker.withSyncedResources(monaco.editor.getModels()\r\n                        .filter(function (model) { return model.getModeId() === _this._modeId; })\r\n                        .map(function (model) { return model.uri; }));\r\n                });\r\n            }\r\n            this._client = p;\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/typescript/workerManager.js\n// module id = 747\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar Uri = monaco.Uri;\r\nvar Promise = monaco.Promise;\r\n//#region utils copied from typescript to prevent loading the entire typescriptServices ---\r\nvar IndentStyle;\r\n(function (IndentStyle) {\r\n    IndentStyle[IndentStyle[\"None\"] = 0] = \"None\";\r\n    IndentStyle[IndentStyle[\"Block\"] = 1] = \"Block\";\r\n    IndentStyle[IndentStyle[\"Smart\"] = 2] = \"Smart\";\r\n})(IndentStyle || (IndentStyle = {}));\r\nfunction flattenDiagnosticMessageText(messageText, newLine) {\r\n    if (typeof messageText === \"string\") {\r\n        return messageText;\r\n    }\r\n    else {\r\n        var diagnosticChain = messageText;\r\n        var result = \"\";\r\n        var indent = 0;\r\n        while (diagnosticChain) {\r\n            if (indent) {\r\n                result += newLine;\r\n                for (var i = 0; i < indent; i++) {\r\n                    result += \"  \";\r\n                }\r\n            }\r\n            result += diagnosticChain.messageText;\r\n            indent++;\r\n            diagnosticChain = diagnosticChain.next;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nfunction displayPartsToString(displayParts) {\r\n    if (displayParts) {\r\n        return displayParts.map(function (displayPart) { return displayPart.text; }).join(\"\");\r\n    }\r\n    return \"\";\r\n}\r\n//#endregion\r\nvar Adapter = /** @class */ (function () {\r\n    function Adapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Adapter.prototype._positionToOffset = function (uri, position) {\r\n        var model = monaco.editor.getModel(uri);\r\n        return model.getOffsetAt(position);\r\n    };\r\n    Adapter.prototype._offsetToPosition = function (uri, offset) {\r\n        var model = monaco.editor.getModel(uri);\r\n        return model.getPositionAt(offset);\r\n    };\r\n    Adapter.prototype._textSpanToRange = function (uri, span) {\r\n        var p1 = this._offsetToPosition(uri, span.start);\r\n        var p2 = this._offsetToPosition(uri, span.start + span.length);\r\n        var startLineNumber = p1.lineNumber, startColumn = p1.column;\r\n        var endLineNumber = p2.lineNumber, endColumn = p2.column;\r\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\r\n    };\r\n    return Adapter;\r\n}());\r\nexport { Adapter };\r\n// --- diagnostics --- ---\r\nvar DiagnostcsAdapter = /** @class */ (function (_super) {\r\n    __extends(DiagnostcsAdapter, _super);\r\n    function DiagnostcsAdapter(_defaults, _selector, worker) {\r\n        var _this = _super.call(this, worker) || this;\r\n        _this._defaults = _defaults;\r\n        _this._selector = _selector;\r\n        _this._disposables = [];\r\n        _this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            if (model.getModeId() !== _selector) {\r\n                return;\r\n            }\r\n            var handle;\r\n            var changeSubscription = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri); }, 500);\r\n            });\r\n            _this._listener[model.uri.toString()] = {\r\n                dispose: function () {\r\n                    changeSubscription.dispose();\r\n                    clearTimeout(handle);\r\n                }\r\n            };\r\n            _this._doValidate(model.uri);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._selector, []);\r\n            var key = model.uri.toString();\r\n            if (_this._listener[key]) {\r\n                _this._listener[key].dispose();\r\n                delete _this._listener[key];\r\n            }\r\n        };\r\n        _this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        _this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        _this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        _this._disposables.push({\r\n            dispose: function () {\r\n                for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\r\n                    var model = _a[_i];\r\n                    onModelRemoved(model);\r\n                }\r\n            }\r\n        });\r\n        _this._disposables.push(_this._defaults.onDidChange(function () {\r\n            // redo diagnostics when options change\r\n            for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\r\n                var model = _a[_i];\r\n                onModelRemoved(model);\r\n                onModelAdd(model);\r\n            }\r\n        }));\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n        return _this;\r\n    }\r\n    DiagnostcsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnostcsAdapter.prototype._doValidate = function (resource) {\r\n        var _this = this;\r\n        this._worker(resource).then(function (worker) {\r\n            if (!monaco.editor.getModel(resource)) {\r\n                // model was disposed in the meantime\r\n                return null;\r\n            }\r\n            var promises = [];\r\n            var _a = _this._defaults.getDiagnosticsOptions(), noSyntaxValidation = _a.noSyntaxValidation, noSemanticValidation = _a.noSemanticValidation;\r\n            if (!noSyntaxValidation) {\r\n                promises.push(worker.getSyntacticDiagnostics(resource.toString()));\r\n            }\r\n            if (!noSemanticValidation) {\r\n                promises.push(worker.getSemanticDiagnostics(resource.toString()));\r\n            }\r\n            return Promise.join(promises);\r\n        }).then(function (diagnostics) {\r\n            if (!diagnostics || !monaco.editor.getModel(resource)) {\r\n                // model was disposed in the meantime\r\n                return null;\r\n            }\r\n            var markers = diagnostics\r\n                .reduce(function (p, c) { return c.concat(p); }, [])\r\n                .map(function (d) { return _this._convertDiagnostics(resource, d); });\r\n            monaco.editor.setModelMarkers(monaco.editor.getModel(resource), _this._selector, markers);\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    DiagnostcsAdapter.prototype._convertDiagnostics = function (resource, diag) {\r\n        var _a = this._offsetToPosition(resource, diag.start), startLineNumber = _a.lineNumber, startColumn = _a.column;\r\n        var _b = this._offsetToPosition(resource, diag.start + diag.length), endLineNumber = _b.lineNumber, endColumn = _b.column;\r\n        return {\r\n            severity: monaco.MarkerSeverity.Error,\r\n            startLineNumber: startLineNumber,\r\n            startColumn: startColumn,\r\n            endLineNumber: endLineNumber,\r\n            endColumn: endColumn,\r\n            message: flattenDiagnosticMessageText(diag.messageText, '\\n')\r\n        };\r\n    };\r\n    return DiagnostcsAdapter;\r\n}(Adapter));\r\nexport { DiagnostcsAdapter };\r\nvar SuggestAdapter = /** @class */ (function (_super) {\r\n    __extends(SuggestAdapter, _super);\r\n    function SuggestAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SuggestAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return ['.'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestAdapter.prototype.provideCompletionItems = function (model, position, _context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        var offset = this._positionToOffset(resource, position);\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getCompletionsAtPosition(resource.toString(), offset);\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var suggestions = info.entries.map(function (entry) {\r\n                return {\r\n                    uri: resource,\r\n                    position: position,\r\n                    label: entry.name,\r\n                    insertText: entry.name,\r\n                    sortText: entry.sortText,\r\n                    kind: SuggestAdapter.convertKind(entry.kind)\r\n                };\r\n            });\r\n            return {\r\n                suggestions: suggestions\r\n            };\r\n        });\r\n    };\r\n    SuggestAdapter.prototype.resolveCompletionItem = function (_model, _position, item, token) {\r\n        var _this = this;\r\n        var myItem = item;\r\n        var resource = myItem.uri;\r\n        var position = myItem.position;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getCompletionEntryDetails(resource.toString(), _this._positionToOffset(resource, position), myItem.label);\r\n        }).then(function (details) {\r\n            if (!details) {\r\n                return myItem;\r\n            }\r\n            return {\r\n                uri: resource,\r\n                position: position,\r\n                label: details.name,\r\n                kind: SuggestAdapter.convertKind(details.kind),\r\n                detail: displayPartsToString(details.displayParts),\r\n                documentation: {\r\n                    value: displayPartsToString(details.documentation)\r\n                }\r\n            };\r\n        });\r\n    };\r\n    SuggestAdapter.convertKind = function (kind) {\r\n        switch (kind) {\r\n            case Kind.primitiveType:\r\n            case Kind.keyword:\r\n                return monaco.languages.CompletionItemKind.Keyword;\r\n            case Kind.variable:\r\n            case Kind.localVariable:\r\n                return monaco.languages.CompletionItemKind.Variable;\r\n            case Kind.memberVariable:\r\n            case Kind.memberGetAccessor:\r\n            case Kind.memberSetAccessor:\r\n                return monaco.languages.CompletionItemKind.Field;\r\n            case Kind.function:\r\n            case Kind.memberFunction:\r\n            case Kind.constructSignature:\r\n            case Kind.callSignature:\r\n            case Kind.indexSignature:\r\n                return monaco.languages.CompletionItemKind.Function;\r\n            case Kind.enum:\r\n                return monaco.languages.CompletionItemKind.Enum;\r\n            case Kind.module:\r\n                return monaco.languages.CompletionItemKind.Module;\r\n            case Kind.class:\r\n                return monaco.languages.CompletionItemKind.Class;\r\n            case Kind.interface:\r\n                return monaco.languages.CompletionItemKind.Interface;\r\n            case Kind.warning:\r\n                return monaco.languages.CompletionItemKind.File;\r\n        }\r\n        return monaco.languages.CompletionItemKind.Property;\r\n    };\r\n    return SuggestAdapter;\r\n}(Adapter));\r\nexport { SuggestAdapter };\r\nvar SignatureHelpAdapter = /** @class */ (function (_super) {\r\n    __extends(SignatureHelpAdapter, _super);\r\n    function SignatureHelpAdapter() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.signatureHelpTriggerCharacters = ['(', ','];\r\n        return _this;\r\n    }\r\n    SignatureHelpAdapter.prototype.provideSignatureHelp = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getSignatureHelpItems(resource.toString(), _this._positionToOffset(resource, position)); }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var ret = {\r\n                activeSignature: info.selectedItemIndex,\r\n                activeParameter: info.argumentIndex,\r\n                signatures: []\r\n            };\r\n            info.items.forEach(function (item) {\r\n                var signature = {\r\n                    label: '',\r\n                    documentation: null,\r\n                    parameters: []\r\n                };\r\n                signature.label += displayPartsToString(item.prefixDisplayParts);\r\n                item.parameters.forEach(function (p, i, a) {\r\n                    var label = displayPartsToString(p.displayParts);\r\n                    var parameter = {\r\n                        label: label,\r\n                        documentation: displayPartsToString(p.documentation)\r\n                    };\r\n                    signature.label += label;\r\n                    signature.parameters.push(parameter);\r\n                    if (i < a.length - 1) {\r\n                        signature.label += displayPartsToString(item.separatorDisplayParts);\r\n                    }\r\n                });\r\n                signature.label += displayPartsToString(item.suffixDisplayParts);\r\n                ret.signatures.push(signature);\r\n            });\r\n            return ret;\r\n        });\r\n    };\r\n    return SignatureHelpAdapter;\r\n}(Adapter));\r\nexport { SignatureHelpAdapter };\r\n// --- hover ------\r\nvar QuickInfoAdapter = /** @class */ (function (_super) {\r\n    __extends(QuickInfoAdapter, _super);\r\n    function QuickInfoAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QuickInfoAdapter.prototype.provideHover = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getQuickInfoAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var documentation = displayPartsToString(info.documentation);\r\n            var tags = info.tags ? info.tags.map(function (tag) {\r\n                var label = \"*@\" + tag.name + \"*\";\r\n                if (!tag.text) {\r\n                    return label;\r\n                }\r\n                return label + (tag.text.match(/\\r\\n|\\n/g) ? ' \\n' + tag.text : \" - \" + tag.text);\r\n            })\r\n                .join('  \\n\\n') : '';\r\n            var contents = displayPartsToString(info.displayParts);\r\n            return {\r\n                range: _this._textSpanToRange(resource, info.textSpan),\r\n                contents: [{\r\n                        value: '```js\\n' + contents + '\\n```\\n'\r\n                    }, {\r\n                        value: documentation + (tags ? '\\n\\n' + tags : '')\r\n                    }]\r\n            };\r\n        });\r\n    };\r\n    return QuickInfoAdapter;\r\n}(Adapter));\r\nexport { QuickInfoAdapter };\r\n// --- occurrences ------\r\nvar OccurrencesAdapter = /** @class */ (function (_super) {\r\n    __extends(OccurrencesAdapter, _super);\r\n    function OccurrencesAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OccurrencesAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getOccurrencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: _this._textSpanToRange(resource, entry.textSpan),\r\n                    kind: entry.isWriteAccess ? monaco.languages.DocumentHighlightKind.Write : monaco.languages.DocumentHighlightKind.Text\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return OccurrencesAdapter;\r\n}(Adapter));\r\nexport { OccurrencesAdapter };\r\n// --- definition ------\r\nvar DefinitionAdapter = /** @class */ (function (_super) {\r\n    __extends(DefinitionAdapter, _super);\r\n    function DefinitionAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getDefinitionAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            var result = [];\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var entry = entries_1[_i];\r\n                var uri = Uri.parse(entry.fileName);\r\n                if (monaco.editor.getModel(uri)) {\r\n                    result.push({\r\n                        uri: uri,\r\n                        range: _this._textSpanToRange(uri, entry.textSpan)\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}(Adapter));\r\nexport { DefinitionAdapter };\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function (_super) {\r\n    __extends(ReferenceAdapter, _super);\r\n    function ReferenceAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getReferencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            var result = [];\r\n            for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\r\n                var entry = entries_2[_i];\r\n                var uri = Uri.parse(entry.fileName);\r\n                if (monaco.editor.getModel(uri)) {\r\n                    result.push({\r\n                        uri: uri,\r\n                        range: _this._textSpanToRange(uri, entry.textSpan)\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}(Adapter));\r\nexport { ReferenceAdapter };\r\n// --- outline ------\r\nvar OutlineAdapter = /** @class */ (function (_super) {\r\n    __extends(OutlineAdapter, _super);\r\n    function OutlineAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OutlineAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getNavigationBarItems(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            var convert = function (bucket, item, containerLabel) {\r\n                var result = {\r\n                    name: item.text,\r\n                    detail: '',\r\n                    kind: (outlineTypeTable[item.kind] || monaco.languages.SymbolKind.Variable),\r\n                    range: _this._textSpanToRange(resource, item.spans[0]),\r\n                    selectionRange: _this._textSpanToRange(resource, item.spans[0]),\r\n                    containerName: containerLabel\r\n                };\r\n                if (item.childItems && item.childItems.length > 0) {\r\n                    for (var _i = 0, _a = item.childItems; _i < _a.length; _i++) {\r\n                        var child = _a[_i];\r\n                        convert(bucket, child, result.name);\r\n                    }\r\n                }\r\n                bucket.push(result);\r\n            };\r\n            var result = [];\r\n            items.forEach(function (item) { return convert(result, item); });\r\n            return result;\r\n        });\r\n    };\r\n    return OutlineAdapter;\r\n}(Adapter));\r\nexport { OutlineAdapter };\r\nvar Kind = /** @class */ (function () {\r\n    function Kind() {\r\n    }\r\n    Kind.unknown = '';\r\n    Kind.keyword = 'keyword';\r\n    Kind.script = 'script';\r\n    Kind.module = 'module';\r\n    Kind.class = 'class';\r\n    Kind.interface = 'interface';\r\n    Kind.type = 'type';\r\n    Kind.enum = 'enum';\r\n    Kind.variable = 'var';\r\n    Kind.localVariable = 'local var';\r\n    Kind.function = 'function';\r\n    Kind.localFunction = 'local function';\r\n    Kind.memberFunction = 'method';\r\n    Kind.memberGetAccessor = 'getter';\r\n    Kind.memberSetAccessor = 'setter';\r\n    Kind.memberVariable = 'property';\r\n    Kind.constructorImplementation = 'constructor';\r\n    Kind.callSignature = 'call';\r\n    Kind.indexSignature = 'index';\r\n    Kind.constructSignature = 'construct';\r\n    Kind.parameter = 'parameter';\r\n    Kind.typeParameter = 'type parameter';\r\n    Kind.primitiveType = 'primitive type';\r\n    Kind.label = 'label';\r\n    Kind.alias = 'alias';\r\n    Kind.const = 'const';\r\n    Kind.let = 'let';\r\n    Kind.warning = 'warning';\r\n    return Kind;\r\n}());\r\nexport { Kind };\r\nvar outlineTypeTable = Object.create(null);\r\noutlineTypeTable[Kind.module] = monaco.languages.SymbolKind.Module;\r\noutlineTypeTable[Kind.class] = monaco.languages.SymbolKind.Class;\r\noutlineTypeTable[Kind.enum] = monaco.languages.SymbolKind.Enum;\r\noutlineTypeTable[Kind.interface] = monaco.languages.SymbolKind.Interface;\r\noutlineTypeTable[Kind.memberFunction] = monaco.languages.SymbolKind.Method;\r\noutlineTypeTable[Kind.memberVariable] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.memberGetAccessor] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.memberSetAccessor] = monaco.languages.SymbolKind.Property;\r\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.const] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.localVariable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\r\noutlineTypeTable[Kind.function] = monaco.languages.SymbolKind.Function;\r\noutlineTypeTable[Kind.localFunction] = monaco.languages.SymbolKind.Function;\r\n// --- formatting ----\r\nvar FormatHelper = /** @class */ (function (_super) {\r\n    __extends(FormatHelper, _super);\r\n    function FormatHelper() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormatHelper._convertOptions = function (options) {\r\n        return {\r\n            ConvertTabsToSpaces: options.insertSpaces,\r\n            TabSize: options.tabSize,\r\n            IndentSize: options.tabSize,\r\n            IndentStyle: IndentStyle.Smart,\r\n            NewLineCharacter: '\\n',\r\n            InsertSpaceAfterCommaDelimiter: true,\r\n            InsertSpaceAfterSemicolonInForStatements: true,\r\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\r\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\r\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\r\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\r\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\r\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\r\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\r\n            PlaceOpenBraceOnNewLineForFunctions: false\r\n        };\r\n    };\r\n    FormatHelper.prototype._convertTextChanges = function (uri, change) {\r\n        return {\r\n            text: change.newText,\r\n            range: this._textSpanToRange(uri, change.span)\r\n        };\r\n    };\r\n    return FormatHelper;\r\n}(Adapter));\r\nexport { FormatHelper };\r\nvar FormatAdapter = /** @class */ (function (_super) {\r\n    __extends(FormatAdapter, _super);\r\n    function FormatAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormatAdapter.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getFormattingEditsForRange(resource.toString(), _this._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }), _this._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }), FormatHelper._convertOptions(options));\r\n        }).then(function (edits) {\r\n            if (edits) {\r\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\r\n            }\r\n        });\r\n    };\r\n    return FormatAdapter;\r\n}(FormatHelper));\r\nexport { FormatAdapter };\r\nvar FormatOnTypeAdapter = /** @class */ (function (_super) {\r\n    __extends(FormatOnTypeAdapter, _super);\r\n    function FormatOnTypeAdapter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(FormatOnTypeAdapter.prototype, \"autoFormatTriggerCharacters\", {\r\n        get: function () {\r\n            return [';', '}', '\\n'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FormatOnTypeAdapter.prototype.provideOnTypeFormattingEdits = function (model, position, ch, options, token) {\r\n        var _this = this;\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.getFormattingEditsAfterKeystroke(resource.toString(), _this._positionToOffset(resource, position), ch, FormatHelper._convertOptions(options));\r\n        }).then(function (edits) {\r\n            if (edits) {\r\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\r\n            }\r\n        });\r\n    };\r\n    return FormatOnTypeAdapter;\r\n}(FormatHelper));\r\nexport { FormatOnTypeAdapter };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/typescript/languageFeatures.js\n// module id = 748\n// module chunks = 4"],"sourceRoot":""}
{"version":3,"sources":["../static/js/2.4bc5d339.chunk.js","../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["webpackJsonp","695","module","__webpack_exports__","__webpack_require__","setupMode","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","Object","defineProperty","value","738","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","resources","then","_","withSyncedResources","739","toSeverity","lsSeverity","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Error","MarkerSeverity","Warning","Information","Info","Hint","toDiagnostics","resource","diag","code","String","severity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","Range","toCompletionItemKind","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","toHighlighKind","mKind","DocumentHighlightKind","Read","Write","fromFormattingOptions","tabSize","insertSpaces","toFoldingRangeKind","Comment","FoldingRangeKind","Imports","Region","DiagnosticsAdapter","CompletionAdapter","DocumentHighlightAdapter","DocumentLinkAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","FoldingRangeAdapter","_languageId","_disposables","_listener","create","onModelAdd","model","modeId","getModeId","handle","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","doValidation","diagnostics","markers","map","getModel","undefined","err","console","error","get","enumerable","configurable","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","provideDocumentHighlights","findDocumentHighlights","provideLinks","findDocumentLinks","url","target","provideDocumentFormattingEdits","format","edits","provideDocumentRangeFormattingEdits","provideFoldingRanges","ranges","result","startLine","endLine","740","DiagnosticSeverity","InsertTextFormat","Position","is","candidate","Is","objectLiteral","number","one","two","three","four","Location","defined","string","red","green","blue","alpha","ColorInformation","color","ColorPresentation","TextEdit","typedArray","FoldingRange","startCharacter","endCharacter","DiagnosticRelatedInformation","location","Diagnostic","relatedInformation","Command","title","command","args","replace","insert","del","TextDocumentEdit","textDocument","VersionedTextDocumentIdentifier","Array","isArray","WorkspaceEdit","changes","documentChanges","TextDocumentIdentifier","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","TextDocumentItem","MarkupKind","PlainText","Markdown","MarkupContent","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","CompletionItem","CompletionList","MarkedString","fromPlainText","plainText","language","Hover","contents","ParameterInformation","SignatureInformation","parameters","DocumentHighlight","SymbolKind","Namespace","Package","Number","Boolean","Key","Null","SymbolInformation","name","containerName","DocumentSymbol","selectionRange","children","deprecated","boolean","CodeActionKind","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","CodeActionContext","only","CodeAction","commandOrEdit","CodeLens","data","FormattingOptions","DocumentLink","TextDocument","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"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","file":"static/js/2.4bc5d339.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 695:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(738);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(739);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\nfunction setupMode(defaults) {\r\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    var languageId = defaults.languageId;\r\n    // all modes\r\n    monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentHighlightAdapter */](worker));\r\n    monaco.languages.registerLinkProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentLinkAdapter */](worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"g\" /* FoldingRangeAdapter */](worker));\r\n    // only html\r\n    if (languageId === 'html') {\r\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DocumentFormattingEditProvider */](worker));\r\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentRangeFormattingEditProvider */](worker));\r\n        new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnosticsAdapter */](languageId, worker, defaults);\r\n    }\r\n}\r\n\n\n/***/ }),\n\n/***/ 738:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `HTMLWorker` instance\r\n                moduleId: 'vs/language/html/htmlWorker',\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.options,\r\n                    languageId: this._defaults.languageId\r\n                },\r\n                label: this._defaults.languageId\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ 739:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentHighlightAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentLinkAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentRangeFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return FoldingRangeAdapter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(740);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nvar Range = monaco.Range;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\r\n            onModelRemoved(model);\r\n        }));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        this._disposables.push(defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        }));\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\r\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\r\n            });\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\n\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text: return mItemKind.Text;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method: return mItemKind.Method;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function: return mItemKind.Function;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field: return mItemKind.Field;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class: return mItemKind.Class;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module: return mItemKind.Module;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property: return mItemKind.Property;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value: return mItemKind.Value;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color: return mItemKind.Color;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File: return mItemKind.File;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction fromCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case mItemKind.Text: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text;\r\n        case mItemKind.Method: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method;\r\n        case mItemKind.Function: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function;\r\n        case mItemKind.Constructor: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor;\r\n        case mItemKind.Field: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field;\r\n        case mItemKind.Variable: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable;\r\n        case mItemKind.Class: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class;\r\n        case mItemKind.Interface: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface;\r\n        case mItemKind.Module: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module;\r\n        case mItemKind.Property: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\r\n        case mItemKind.Unit: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit;\r\n        case mItemKind.Value: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value;\r\n        case mItemKind.Enum: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum;\r\n        case mItemKind.Keyword: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword;\r\n        case mItemKind.Snippet: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet;\r\n        case mItemKind.Color: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color;\r\n        case mItemKind.File: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File;\r\n        case mItemKind.Reference: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference;\r\n    }\r\n    return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return ['.', ':', '<', '\"', '=', '/'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* InsertTextFormat */].Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\n\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toHighlighKind(kind) {\r\n    var mKind = monaco.languages.DocumentHighlightKind;\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Read: return mKind.Read;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Write: return mKind.Write;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Text: return mKind.Text;\r\n    }\r\n    return mKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                kind: toHighlighKind(item.kind)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\n\r\nvar DocumentLinkAdapter = /** @class */ (function () {\r\n    function DocumentLinkAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                url: item.target\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentLinkAdapter;\r\n}());\r\n\r\nfunction fromFormattingOptions(options) {\r\n    return {\r\n        tabSize: options.tabSize,\r\n        insertSpaces: options.insertSpaces\r\n    };\r\n}\r\nvar DocumentFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentFormattingEditProvider;\r\n}());\r\n\r\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentRangeFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentRangeFormattingEditProvider;\r\n}());\r\n\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\n\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n/***/ }),\n\n/***/ 740:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Position */\n/* unused harmony export Range */\n/* unused harmony export Location */\n/* unused harmony export Color */\n/* unused harmony export ColorInformation */\n/* unused harmony export ColorPresentation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return FoldingRangeKind; });\n/* unused harmony export FoldingRange */\n/* unused harmony export DiagnosticRelatedInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* unused harmony export TextEdit */\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* unused harmony export MarkupKind */\n/* unused harmony export MarkupContent */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return InsertTextFormat; });\n/* unused harmony export CompletionItem */\n/* unused harmony export CompletionList */\n/* unused harmony export MarkedString */\n/* unused harmony export Hover */\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentHighlightKind; });\n/* unused harmony export DocumentHighlight */\n/* unused harmony export SymbolKind */\n/* unused harmony export SymbolInformation */\n/* unused harmony export DocumentSymbol */\n/* unused harmony export CodeActionKind */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeAction */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* unused harmony export TextDocument */\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nvar Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nvar ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nvar ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nvar FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nvar DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\n\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nvar MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\n\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nvar CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\n\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.4bc5d339.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nexport function setupMode(defaults) {\r\n    var client = new WorkerManager(defaults);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    var languageId = defaults.languageId;\r\n    // all modes\r\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\r\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\r\n    // only html\r\n    if (languageId === 'html') {\r\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\r\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\r\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 695\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `HTMLWorker` instance\r\n                moduleId: 'vs/language/html/htmlWorker',\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.options,\r\n                    languageId: this._defaults.languageId\r\n                },\r\n                label: this._defaults.languageId\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 738\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Range = monaco.Range;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\r\n            onModelRemoved(model);\r\n        }));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        this._disposables.push(defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        }));\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\r\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\r\n            });\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction fromCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\r\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\r\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\r\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\r\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\r\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\r\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\r\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\r\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\r\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\r\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\r\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\r\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\r\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\r\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\r\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\r\n        case mItemKind.File: return ls.CompletionItemKind.File;\r\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\r\n    }\r\n    return ls.CompletionItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return ['.', ':', '<', '\"', '=', '/'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toHighlighKind(kind) {\r\n    var mKind = monaco.languages.DocumentHighlightKind;\r\n    switch (kind) {\r\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\r\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\r\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\r\n    }\r\n    return mKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                kind: toHighlighKind(item.kind)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\nexport { DocumentHighlightAdapter };\r\nvar DocumentLinkAdapter = /** @class */ (function () {\r\n    function DocumentLinkAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                url: item.target\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentLinkAdapter;\r\n}());\r\nexport { DocumentLinkAdapter };\r\nfunction fromFormattingOptions(options) {\r\n    return {\r\n        tabSize: options.tabSize,\r\n        insertSpaces: options.insertSpaces\r\n    };\r\n}\r\nvar DocumentFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentFormattingEditProvider;\r\n}());\r\nexport { DocumentFormattingEditProvider };\r\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentRangeFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentRangeFormattingEditProvider;\r\n}());\r\nexport { DocumentRangeFormattingEditProvider };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 739\n// module chunks = 2","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 740\n// module chunks = 2"],"sourceRoot":""}
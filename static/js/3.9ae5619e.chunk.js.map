{"version":3,"sources":["../static/js/3.9ae5619e.chunk.js","../node_modules/monaco-editor/esm/vs/language/css/cssMode.js","../node_modules/monaco-editor/esm/vs/language/css/workerManager.js","../node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js"],"names":["webpackJsonp","689","module","__webpack_exports__","__webpack_require__","setupMode","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","first","more","_i","arguments","length","getLanguageServiceWorker","apply","concat","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider","Object","defineProperty","value","735","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","getProxy","resources","then","_","withSyncedResources","736","toSeverity","lsSeverity","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Error","MarkerSeverity","Warning","Information","Info","Hint","toDiagnostics","resource","diag","code","String","severity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","fromPosition","position","column","lineNumber","fromRange","toRange","Range","toCompletionItemKind","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","isMarkupContent","thing","toMarkdownString","entry","replace","language","toMarkedStringArray","contents","Array","isArray","map","toDocumentHighlightKind","Read","DocumentHighlightKind","Write","toLocation","location","uri","Uri","parse","toWorkspaceEdit","edit","changes","resourceEdits","edits","_a","e","push","toSymbolKind","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toFoldingRangeKind","Comment","FoldingRangeKind","Imports","Region","DiagnosticsAdapter","CompletionAdapter","HoverAdapter","DocumentHighlightAdapter","DefinitionAdapter","ReferenceAdapter","RenameAdapter","DocumentSymbolAdapter","DocumentColorAdapter","FoldingRangeAdapter","_languageId","_disposables","_listener","create","onModelAdd","model","modeId","getModeId","handle","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","doValidation","diagnostics","markers","getModel","undefined","err","console","error","get","enumerable","configurable","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","items","item","insertText","sortText","filterText","documentation","detail","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","provideHover","doHover","provideDocumentHighlights","findDocumentHighlights","entries","provideDefinition","findDefinition","definition","provideReferences","findReferences","provideRenameEdits","newName","doRename","provideDocumentSymbols","findDocumentSymbols","name","containerName","selectionRange","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","provideFoldingRanges","ranges","result","startLine","endLine","737","DiagnosticSeverity","InsertTextFormat","Position","is","candidate","Is","objectLiteral","number","one","two","three","four","Location","defined","string","red","green","blue","alpha","ColorInformation","ColorPresentation","TextEdit","typedArray","FoldingRange","startCharacter","endCharacter","DiagnosticRelatedInformation","Diagnostic","relatedInformation","Command","title","command","args","insert","del","TextDocumentEdit","textDocument","VersionedTextDocumentIdentifier","WorkspaceEdit","documentChanges","TextDocumentIdentifier","TextEditChangeImpl","delete","add","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","TextDocumentItem","MarkupKind","PlainText","Markdown","MarkupContent","Folder","EnumMember","Struct","Event","Operator","TypeParameter","CompletionItem","CompletionList","MarkedString","fromPlainText","plainText","Hover","ParameterInformation","SignatureInformation","parameters","DocumentHighlight","Key","Null","SymbolInformation","DocumentSymbol","children","deprecated","boolean","CodeActionKind","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","CodeActionContext","only","CodeAction","commandOrEdit","CodeLens","data","FormattingOptions","tabSize","insertSpaces","DocumentLink","target","TextDocument","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"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","file":"static/js/3.9ae5619e.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 689:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(735);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(736);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\nfunction setupMode(defaults) {\r\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    var languageId = defaults.languageId;\r\n    monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker));\r\n    monaco.languages.registerHoverProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"h\" /* HoverAdapter */](worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentHighlightAdapter */](worker));\r\n    monaco.languages.registerDefinitionProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DefinitionAdapter */](worker));\r\n    monaco.languages.registerReferenceProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"i\" /* ReferenceAdapter */](worker));\r\n    monaco.languages.registerDocumentSymbolProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentSymbolAdapter */](worker));\r\n    monaco.languages.registerRenameProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"j\" /* RenameAdapter */](worker));\r\n    monaco.languages.registerColorProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentColorAdapter */](worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"g\" /* FoldingRangeAdapter */](worker));\r\n    new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DiagnosticsAdapter */](languageId, worker, defaults);\r\n}\r\n\n\n/***/ }),\n\n/***/ 735:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `CSSWorker` instance\r\n                moduleId: 'vs/language/css/cssWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ 736:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return HoverAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentHighlightAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DefinitionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ReferenceAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return RenameAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentSymbolAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentColorAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return FoldingRangeAdapter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(737);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n\r\nvar Uri = monaco.Uri;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        });\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString());\r\n        }).then(function (diagnostics) {\r\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n            var model = monaco.editor.getModel(resource);\r\n            if (model.getModeId() === languageId) {\r\n                monaco.editor.setModelMarkers(model, languageId, markers);\r\n            }\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\n\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text: return mItemKind.Text;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method: return mItemKind.Method;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function: return mItemKind.Function;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field: return mItemKind.Field;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class: return mItemKind.Class;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module: return mItemKind.Module;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property: return mItemKind.Property;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value: return mItemKind.Value;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color: return mItemKind.Color;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File: return mItemKind.File;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* InsertTextFormat */].Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\n\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\n\r\n// --- document highlights ------\r\nfunction toDocumentHighlightKind(kind) {\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Read: return monaco.languages.DocumentHighlightKind.Read;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Write: return monaco.languages.DocumentHighlightKind.Write;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Text: return monaco.languages.DocumentHighlightKind.Text;\r\n    }\r\n    return monaco.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: toRange(entry.range),\r\n                    kind: toDocumentHighlightKind(entry.kind)\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\n\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\nvar DefinitionAdapter = /** @class */ (function () {\r\n    function DefinitionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDefinition(resource.toString(), fromPosition(position));\r\n        }).then(function (definition) {\r\n            if (!definition) {\r\n                return;\r\n            }\r\n            return [toLocation(definition)];\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}());\r\n\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function () {\r\n    function ReferenceAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findReferences(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(toLocation);\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}());\r\n\r\n// --- rename ------\r\nfunction toWorkspaceEdit(edit) {\r\n    if (!edit || !edit.changes) {\r\n        return void 0;\r\n    }\r\n    var resourceEdits = [];\r\n    for (var uri in edit.changes) {\r\n        var edits = [];\r\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            edits.push({\r\n                range: toRange(e.range),\r\n                text: e.newText\r\n            });\r\n        }\r\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\r\n    }\r\n    return {\r\n        edits: resourceEdits\r\n    };\r\n}\r\nvar RenameAdapter = /** @class */ (function () {\r\n    function RenameAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\r\n        }).then(function (edit) {\r\n            return toWorkspaceEdit(edit);\r\n        });\r\n    };\r\n    return RenameAdapter;\r\n}());\r\n\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].File: return mKind.Array;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Module: return mKind.Module;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Namespace: return mKind.Namespace;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Package: return mKind.Package;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Class: return mKind.Class;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Method: return mKind.Method;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Property: return mKind.Property;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Field: return mKind.Field;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Constructor: return mKind.Constructor;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Enum: return mKind.Enum;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Interface: return mKind.Interface;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Function: return mKind.Function;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Variable: return mKind.Variable;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Constant: return mKind.Constant;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].String: return mKind.String;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Number: return mKind.Number;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Boolean: return mKind.Boolean;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* SymbolKind */].Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\n\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\n\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\n\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* FoldingRangeKind */].Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n/***/ }),\n\n/***/ 737:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Position */\n/* unused harmony export Range */\n/* unused harmony export Location */\n/* unused harmony export Color */\n/* unused harmony export ColorInformation */\n/* unused harmony export ColorPresentation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return FoldingRangeKind; });\n/* unused harmony export FoldingRange */\n/* unused harmony export DiagnosticRelatedInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* unused harmony export TextEdit */\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* unused harmony export MarkupKind */\n/* unused harmony export MarkupContent */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return InsertTextFormat; });\n/* unused harmony export CompletionItem */\n/* unused harmony export CompletionList */\n/* unused harmony export MarkedString */\n/* unused harmony export Hover */\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentHighlightKind; });\n/* unused harmony export DocumentHighlight */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return SymbolKind; });\n/* unused harmony export SymbolInformation */\n/* unused harmony export DocumentSymbol */\n/* unused harmony export CodeActionKind */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeAction */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* unused harmony export TextDocument */\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nvar Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nvar ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nvar ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nvar FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nvar DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\n\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nvar MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\n\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nvar CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\n\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.9ae5619e.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nexport function setupMode(defaults) {\r\n    var client = new WorkerManager(defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    var languageId = defaults.languageId;\r\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\r\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\r\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\r\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\r\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\r\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\r\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\r\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/cssMode.js\n// module id = 689\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `CSSWorker` instance\r\n                moduleId: 'vs/language/css/cssWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/workerManager.js\n// module id = 735\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Uri = monaco.Uri;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        });\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString());\r\n        }).then(function (diagnostics) {\r\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n            var model = monaco.editor.getModel(resource);\r\n            if (model.getModeId() === languageId) {\r\n                monaco.editor.setModelMarkers(model, languageId, markers);\r\n            }\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\nexport { HoverAdapter };\r\n// --- document highlights ------\r\nfunction toDocumentHighlightKind(kind) {\r\n    switch (kind) {\r\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\r\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\r\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\r\n    }\r\n    return monaco.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: toRange(entry.range),\r\n                    kind: toDocumentHighlightKind(entry.kind)\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\nexport { DocumentHighlightAdapter };\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\nvar DefinitionAdapter = /** @class */ (function () {\r\n    function DefinitionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDefinition(resource.toString(), fromPosition(position));\r\n        }).then(function (definition) {\r\n            if (!definition) {\r\n                return;\r\n            }\r\n            return [toLocation(definition)];\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}());\r\nexport { DefinitionAdapter };\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function () {\r\n    function ReferenceAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findReferences(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(toLocation);\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}());\r\nexport { ReferenceAdapter };\r\n// --- rename ------\r\nfunction toWorkspaceEdit(edit) {\r\n    if (!edit || !edit.changes) {\r\n        return void 0;\r\n    }\r\n    var resourceEdits = [];\r\n    for (var uri in edit.changes) {\r\n        var edits = [];\r\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            edits.push({\r\n                range: toRange(e.range),\r\n                text: e.newText\r\n            });\r\n        }\r\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\r\n    }\r\n    return {\r\n        edits: resourceEdits\r\n    };\r\n}\r\nvar RenameAdapter = /** @class */ (function () {\r\n    function RenameAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\r\n        }).then(function (edit) {\r\n            return toWorkspaceEdit(edit);\r\n        });\r\n    };\r\n    return RenameAdapter;\r\n}());\r\nexport { RenameAdapter };\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case ls.SymbolKind.File: return mKind.Array;\r\n        case ls.SymbolKind.Module: return mKind.Module;\r\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\r\n        case ls.SymbolKind.Package: return mKind.Package;\r\n        case ls.SymbolKind.Class: return mKind.Class;\r\n        case ls.SymbolKind.Method: return mKind.Method;\r\n        case ls.SymbolKind.Property: return mKind.Property;\r\n        case ls.SymbolKind.Field: return mKind.Field;\r\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\r\n        case ls.SymbolKind.Enum: return mKind.Enum;\r\n        case ls.SymbolKind.Interface: return mKind.Interface;\r\n        case ls.SymbolKind.Function: return mKind.Function;\r\n        case ls.SymbolKind.Variable: return mKind.Variable;\r\n        case ls.SymbolKind.Constant: return mKind.Constant;\r\n        case ls.SymbolKind.String: return mKind.String;\r\n        case ls.SymbolKind.Number: return mKind.Number;\r\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\r\n        case ls.SymbolKind.Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\nexport { DocumentSymbolAdapter };\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\nexport { DocumentColorAdapter };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js\n// module id = 736\n// module chunks = 3","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\n// module id = 737\n// module chunks = 3"],"sourceRoot":""}